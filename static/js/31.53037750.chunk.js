(this["webpackJsonpfuse-react-app"]=this["webpackJsonpfuse-react-app"]||[]).push([[31],{1284:function(e,a,r){"use strict";r.d(a,"a",(function(){return v}));var n=r(121),t=r(1254),l=r(1263),o=r(1245),i=r(1271),c=r(1272),s=r(2),m=r(0),d=r.n(m),u=r(9),b=r(1187),p=r(638),g=r(1242),h=r(1253),T=r(8),f=r(408),w=r(409),C=r(1285),y=r.n(C);const E=Object(b.a)({productionPrefix:"iframe-"});class P extends d.a.Component{constructor(){super(...arguments),this.state={ready:!1},this.handleRef=e=>{this.contentDocument=e?e.node.contentDocument:null},this.onContentDidMount=()=>{this.setState({ready:!0,jss:Object(f.a)(Object(u.a)(Object(u.a)({},Object(p.a)()),{},{plugins:[...Object(p.a)().plugins,Object(w.a)()],insertionPoint:this.contentDocument.querySelector("#jss-demo-insertion-point")})),sheetsManager:new Map,container:this.contentDocument.body})},this.onContentDidUpdate=()=>{this.contentDocument.body.dir=this.props.theme.direction},this.renderHead=()=>d.a.createElement(d.a.Fragment,null,d.a.createElement("style",{dangerouslySetInnerHTML:{__html:"\n                    html {\n                    font-size: 62.5%;\n                    font-family: Muli, Roboto, Helvetica Neue, Arial, sans-serif;\n                    }\n                "}}),d.a.createElement("noscript",{id:"jss-demo-insertion-point"}))}render(){const{children:e,classes:a,theme:r}=this.props;return d.a.createElement(y.a,{head:this.renderHead(),ref:this.handleRef,className:Object(s.default)(a.root,"shadow"),contentDidMount:this.onContentDidMount,contentDidUpdate:this.onContentDidUpdate},this.state.ready?d.a.createElement(g.b,{jss:this.state.jss,generateClassName:E,sheetsManager:this.state.sheetsManager},d.a.createElement(h.a,{theme:r},d.a.cloneElement(e,{container:this.state.container}))):null)}}var R=Object(T.a)(e=>({root:{backgroundColor:e.palette.background.default,flexGrow:1,height:400,border:"none"}}),{withTheme:!0})(P);function S(e){const[a,r]=Object(m.useState)(e.currentTabIndex),{component:u,raw:b,iframe:p,className:g}=e;return d.a.createElement(l.a,{className:Object(s.default)(g,"shadow")},d.a.createElement(t.a,{position:"static",color:"default",className:"shadow-0"},d.a.createElement(c.a,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:a,onChange:function(e,a){r(a)}},u&&d.a.createElement(i.a,{classes:{root:"min-w-64"},icon:d.a.createElement(o.a,null,"remove_red_eye")}),b&&d.a.createElement(i.a,{classes:{root:"min-w-64"},icon:d.a.createElement(o.a,null,"code")}))),d.a.createElement("div",{className:"flex justify-center max-w-full"},d.a.createElement("div",{className:0===a?"flex flex-1 max-w-full":"hidden"},u&&(p?d.a.createElement(R,null,d.a.createElement(u,null)):d.a.createElement("div",{className:"p-24 flex flex-1 justify-center max-w-full"},d.a.createElement(u,null)))),d.a.createElement("div",{className:1===a?"flex flex-1":"hidden"},b&&d.a.createElement("div",{className:"flex flex-1"},d.a.createElement(n.a,{component:"pre",className:"language-javascript w-full"},b.default)))))}S.defaultProps={currentTabIndex:0};var v=S},2161:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return h}));var n=r(0),t=r.n(n),l=r(1243),o=r(1347),i=r(1350),c=r(1334),s=r(1547),m=r(1348),d=r(1349),u=r(200);const b=Object(l.a)({table:{minWidth:650}});function p(e,a,r,n,t){return{name:e,calories:a,fat:r,carbs:n,protein:t}}const g=[p("Frozen yoghurt",159,6,24,4),p("Ice cream sandwich",237,9,37,4.3),p("Eclair",262,16,24,6),p("Cupcake",305,3.7,67,4.3),p("Gingerbread",356,16,49,3.9)];function h(){const e=b();return t.a.createElement(s.a,{component:u.a},t.a.createElement(o.a,{className:e.table,"aria-label":"simple table"},t.a.createElement(m.a,null,t.a.createElement(d.a,null,t.a.createElement(c.a,null,"Dessert (100g serving)"),t.a.createElement(c.a,{align:"right"},"Calories"),t.a.createElement(c.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(i.a,null,g.map(e=>t.a.createElement(d.a,{key:e.name},t.a.createElement(c.a,{component:"th",scope:"row"},e.name),t.a.createElement(c.a,{align:"right"},e.calories),t.a.createElement(c.a,{align:"right"},e.fat),t.a.createElement(c.a,{align:"right"},e.carbs),t.a.createElement(c.a,{align:"right"},e.protein))))))}},2162:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function BasicTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2163:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return i}));var n=r(0),t=r(2164);const l=[{field:"id",headerName:"ID",width:70},{field:"firstName",headerName:"First name",width:130},{field:"lastName",headerName:"Last name",width:130},{field:"age",headerName:"Age",type:"number",width:90},{field:"fullName",headerName:"Full name",description:"This column has a value getter and is not sortable.",sortable:!1,width:160,valueGetter:e=>"".concat(e.getValue("firstName")||""," ").concat(e.getValue("lastName")||"")}],o=[{id:1,lastName:"Snow",firstName:"Jon",age:35},{id:2,lastName:"Lannister",firstName:"Cersei",age:42},{id:3,lastName:"Lannister",firstName:"Jaime",age:45},{id:4,lastName:"Stark",firstName:"Arya",age:16},{id:5,lastName:"Targaryen",firstName:"Daenerys",age:null},{id:6,lastName:"Melisandre",firstName:null,age:150},{id:7,lastName:"Clifford",firstName:"Ferrara",age:44},{id:8,lastName:"Frances",firstName:"Rossini",age:36},{id:9,lastName:"Roxie",firstName:"Harvey",age:65}];function i(){return n.createElement("div",{style:{height:400,width:"100%"}},n.createElement(t.a,{rows:o,columns:l,pageSize:5,checkboxSelection:!0}))}},2165:function(e,a,r){"use strict";r.r(a),a.default="import * as React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'firstName', headerName: 'First name', width: 130 },\r\n  { field: 'lastName', headerName: 'Last name', width: 130 },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    valueGetter: (params) =>\r\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n  },\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n];\r\n\r\nexport default function DataTable() {\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n  );\r\n}\r\n"},2166:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return h}));var n=r(0),t=r.n(n),l=r(1243),o=r(1347),i=r(1350),c=r(1334),s=r(1547),m=r(1348),d=r(1349),u=r(200);const b=Object(l.a)({table:{minWidth:650}});function p(e,a,r,n,t){return{name:e,calories:a,fat:r,carbs:n,protein:t}}const g=[p("Frozen yoghurt",159,6,24,4),p("Ice cream sandwich",237,9,37,4.3),p("Eclair",262,16,24,6),p("Cupcake",305,3.7,67,4.3),p("Gingerbread",356,16,49,3.9)];function h(){const e=b();return t.a.createElement(s.a,{component:u.a},t.a.createElement(o.a,{className:e.table,size:"small","aria-label":"a dense table"},t.a.createElement(m.a,null,t.a.createElement(d.a,null,t.a.createElement(c.a,null,"Dessert (100g serving)"),t.a.createElement(c.a,{align:"right"},"Calories"),t.a.createElement(c.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(i.a,null,g.map(e=>t.a.createElement(d.a,{key:e.name},t.a.createElement(c.a,{component:"th",scope:"row"},e.name),t.a.createElement(c.a,{align:"right"},e.calories),t.a.createElement(c.a,{align:"right"},e.fat),t.a.createElement(c.a,{align:"right"},e.carbs),t.a.createElement(c.a,{align:"right"},e.protein))))))}},2167:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nexport default function DenseTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2168:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return z}));var n=r(0),t=r.n(n),l=r(2),o=r(1243),i=r(16),c=r(1347),s=r(1350),m=r(1334),d=r(1547),u=r(1348),b=r(2363),p=r(1349),g=r(2564),h=r(1255),T=r(201),f=r(200),w=r(1274),C=r(1191),y=r(1252),E=r(1249),P=r(1250),R=r(1329),S=r.n(R),v=r(2169),N=r.n(v);function x(e,a,r,n,t){return{name:e,calories:a,fat:r,carbs:n,protein:t}}const k=[x("Cupcake",305,3.7,67,4.3),x("Donut",452,25,51,4.9),x("Eclair",262,16,24,6),x("Frozen yoghurt",159,6,24,4),x("Gingerbread",356,16,49,3.9),x("Honeycomb",408,3.2,87,6.5),x("Ice cream sandwich",237,9,37,4.3),x("Jelly Bean",375,0,94,0),x("KitKat",518,26,65,7),x("Lollipop",392,.2,98,0),x("Marshmallow",318,0,81,2),x("Nougat",360,19,9,37),x("Oreo",437,18,63,4)];function D(e,a,r){return a[r]<e[r]?-1:a[r]>e[r]?1:0}const B=[{id:"name",numeric:!1,disablePadding:!0,label:"Dessert\xa0(100g serving)"},{id:"calories",numeric:!0,disablePadding:!1,label:"Calories"},{id:"fat",numeric:!0,disablePadding:!1,label:"Fat\xa0(g)"},{id:"carbs",numeric:!0,disablePadding:!1,label:"Carbs\xa0(g)"},{id:"protein",numeric:!0,disablePadding:!1,label:"Protein\xa0(g)"}];function I(e){const{classes:a,onSelectAllClick:r,order:n,orderBy:l,numSelected:o,rowCount:i,onRequestSort:c}=e;return t.a.createElement(u.a,null,t.a.createElement(p.a,null,t.a.createElement(m.a,{padding:"checkbox"},t.a.createElement(w.a,{indeterminate:o>0&&o<i,checked:i>0&&o===i,onChange:r,inputProps:{"aria-label":"select all desserts"}})),B.map(e=>{return t.a.createElement(m.a,{key:e.id,align:e.numeric?"right":"left",padding:e.disablePadding?"none":"default",sortDirection:l===e.id&&n},t.a.createElement(g.a,{active:l===e.id,direction:l===e.id?n:"asc",onClick:(r=e.id,e=>{c(e,r)})},e.label,l===e.id?t.a.createElement("span",{className:a.visuallyHidden},"desc"===n?"sorted descending":"sorted ascending"):null));var r})))}const H=Object(o.a)(e=>({root:{paddingLeft:e.spacing(2),paddingRight:e.spacing(1)},highlight:"light"===e.palette.type?{color:e.palette.secondary.main,backgroundColor:Object(i.e)(e.palette.secondary.light,.85)}:{color:e.palette.text.primary,backgroundColor:e.palette.secondary.dark},title:{flex:"1 1 100%"}})),A=e=>{const a=H(),{numSelected:r}=e;return t.a.createElement(h.a,{className:Object(l.default)(a.root,{[a.highlight]:r>0})},r>0?t.a.createElement(T.a,{className:a.title,color:"inherit",variant:"subtitle1",component:"div"},r," selected"):t.a.createElement(T.a,{className:a.title,variant:"h6",id:"tableTitle",component:"div"},"Nutrition"),r>0?t.a.createElement(y.a,{title:"Delete"},t.a.createElement(C.a,{"aria-label":"delete"},t.a.createElement(S.a,null))):t.a.createElement(y.a,{title:"Filter list"},t.a.createElement(C.a,{"aria-label":"filter list"},t.a.createElement(N.a,null))))},F=Object(o.a)(e=>({root:{width:"100%"},paper:{width:"100%",marginBottom:e.spacing(2)},table:{minWidth:750},visuallyHidden:{border:0,clip:"rect(0 0 0 0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",top:20,width:1}}));function z(){const e=F(),[a,r]=t.a.useState("asc"),[n,l]=t.a.useState("calories"),[o,i]=t.a.useState([]),[u,g]=t.a.useState(0),[h,T]=t.a.useState(!1),[C,y]=t.a.useState(5),R=C-Math.min(C,k.length-u*C);return t.a.createElement("div",{className:e.root},t.a.createElement(f.a,{className:e.paper},t.a.createElement(A,{numSelected:o.length}),t.a.createElement(d.a,null,t.a.createElement(c.a,{className:e.table,"aria-labelledby":"tableTitle",size:h?"small":"medium","aria-label":"enhanced table"},t.a.createElement(I,{classes:e,numSelected:o.length,order:a,orderBy:n,onSelectAllClick:e=>{if(e.target.checked){const e=k.map(e=>e.name);i(e)}else i([])},onRequestSort:(e,t)=>{r(n===t&&"asc"===a?"desc":"asc"),l(t)},rowCount:k.length}),t.a.createElement(s.a,null,function(e,a){const r=e.map((e,a)=>[e,a]);return r.sort((e,r)=>{const n=a(e[0],r[0]);return 0!==n?n:e[1]-r[1]}),r.map(e=>e[0])}(k,function(e,a){return"desc"===e?(e,r)=>D(e,r,a):(e,r)=>-D(e,r,a)}(a,n)).slice(u*C,u*C+C).map((e,a)=>{const r=(n=e.name,-1!==o.indexOf(n));var n;const l="enhanced-table-checkbox-".concat(a);return t.a.createElement(p.a,{hover:!0,onClick:a=>((e,a)=>{const r=o.indexOf(a);let n=[];-1===r?n=n.concat(o,a):0===r?n=n.concat(o.slice(1)):r===o.length-1?n=n.concat(o.slice(0,-1)):r>0&&(n=n.concat(o.slice(0,r),o.slice(r+1))),i(n)})(0,e.name),role:"checkbox","aria-checked":r,tabIndex:-1,key:e.name,selected:r},t.a.createElement(m.a,{padding:"checkbox"},t.a.createElement(w.a,{checked:r,inputProps:{"aria-labelledby":l}})),t.a.createElement(m.a,{component:"th",id:l,scope:"row",padding:"none"},e.name),t.a.createElement(m.a,{align:"right"},e.calories),t.a.createElement(m.a,{align:"right"},e.fat),t.a.createElement(m.a,{align:"right"},e.carbs),t.a.createElement(m.a,{align:"right"},e.protein))}),R>0&&t.a.createElement(p.a,{style:{height:(h?33:53)*R}},t.a.createElement(m.a,{colSpan:6}))))),t.a.createElement(b.a,{rowsPerPageOptions:[5,10,25],component:"div",count:k.length,rowsPerPage:C,page:u,onChangePage:(e,a)=>{g(a)},onChangeRowsPerPage:e=>{y(parseInt(e.target.value,10)),g(0)}})),t.a.createElement(E.a,{control:t.a.createElement(P.a,{checked:h,onChange:e=>{T(e.target.checked)}}),label:"Dense padding"}))}},2170:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert\xa0(100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat\xa0(g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs\xa0(g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein\xa0(g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"},2171:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return w}));var n=r(0),t=r.n(n),l=r(8),o=r(1243),i=r(1347),c=r(1350),s=r(1334),m=r(1547),d=r(1348),u=r(1349),b=r(200);const p=Object(l.a)(e=>({head:{backgroundColor:e.palette.common.black,color:e.palette.common.white},body:{fontSize:14}}))(s.a),g=Object(l.a)(e=>({root:{"&:nth-of-type(odd)":{backgroundColor:e.palette.action.hover}}}))(u.a);function h(e,a,r,n,t){return{name:e,calories:a,fat:r,carbs:n,protein:t}}const T=[h("Frozen yoghurt",159,6,24,4),h("Ice cream sandwich",237,9,37,4.3),h("Eclair",262,16,24,6),h("Cupcake",305,3.7,67,4.3),h("Gingerbread",356,16,49,3.9)],f=Object(o.a)({table:{minWidth:700}});function w(){const e=f();return t.a.createElement(m.a,{component:b.a},t.a.createElement(i.a,{className:e.table,"aria-label":"customized table"},t.a.createElement(d.a,null,t.a.createElement(u.a,null,t.a.createElement(p,null,"Dessert (100g serving)"),t.a.createElement(p,{align:"right"},"Calories"),t.a.createElement(p,{align:"right"},"Fat\xa0(g)"),t.a.createElement(p,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(p,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(c.a,null,T.map(e=>t.a.createElement(g,{key:e.name},t.a.createElement(p,{component:"th",scope:"row"},e.name),t.a.createElement(p,{align:"right"},e.calories),t.a.createElement(p,{align:"right"},e.fat),t.a.createElement(p,{align:"right"},e.carbs),t.a.createElement(p,{align:"right"},e.protein))))))}},2172:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Dessert (100g serving)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.protein}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2173:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return k}));var n=r(0),t=r.n(n),l=r(1243),o=r(41),i=r(1347),c=r(1350),s=r(1334),m=r(1547),d=r(2465),u=r(2363),b=r(1349),p=r(200),g=r(1191),h=r(1420),T=r.n(h),f=r(1333),w=r.n(f),C=r(1332),y=r.n(C),E=r(1419),P=r.n(E);const R=Object(l.a)(e=>({root:{flexShrink:0,marginLeft:e.spacing(2.5)}}));function S(e){const a=R(),r=Object(o.a)(),{count:n,page:l,rowsPerPage:i,onChangePage:c}=e;return t.a.createElement("div",{className:a.root},t.a.createElement(g.a,{onClick:e=>{c(e,0)},disabled:0===l,"aria-label":"first page"},"rtl"===r.direction?t.a.createElement(P.a,null):t.a.createElement(T.a,null)),t.a.createElement(g.a,{onClick:e=>{c(e,l-1)},disabled:0===l,"aria-label":"previous page"},"rtl"===r.direction?t.a.createElement(y.a,null):t.a.createElement(w.a,null)),t.a.createElement(g.a,{onClick:e=>{c(e,l+1)},disabled:l>=Math.ceil(n/i)-1,"aria-label":"next page"},"rtl"===r.direction?t.a.createElement(w.a,null):t.a.createElement(y.a,null)),t.a.createElement(g.a,{onClick:e=>{c(e,Math.max(0,Math.ceil(n/i)-1))},disabled:l>=Math.ceil(n/i)-1,"aria-label":"last page"},"rtl"===r.direction?t.a.createElement(T.a,null):t.a.createElement(P.a,null)))}function v(e,a,r){return{name:e,calories:a,fat:r}}const N=[v("Cupcake",305,3.7),v("Donut",452,25),v("Eclair",262,16),v("Frozen yoghurt",159,6),v("Gingerbread",356,16),v("Honeycomb",408,3.2),v("Ice cream sandwich",237,9),v("Jelly Bean",375,0),v("KitKat",518,26),v("Lollipop",392,.2),v("Marshmallow",318,0),v("Nougat",360,19),v("Oreo",437,18)].sort((e,a)=>e.calories<a.calories?-1:1),x=Object(l.a)({table:{minWidth:500}});function k(){const e=x(),[a,r]=t.a.useState(0),[n,l]=t.a.useState(5),o=n-Math.min(n,N.length-a*n);return t.a.createElement(m.a,{component:p.a},t.a.createElement(i.a,{className:e.table,"aria-label":"custom pagination table"},t.a.createElement(c.a,null,(n>0?N.slice(a*n,a*n+n):N).map(e=>t.a.createElement(b.a,{key:e.name},t.a.createElement(s.a,{component:"th",scope:"row"},e.name),t.a.createElement(s.a,{style:{width:160},align:"right"},e.calories),t.a.createElement(s.a,{style:{width:160},align:"right"},e.fat))),o>0&&t.a.createElement(b.a,{style:{height:53*o}},t.a.createElement(s.a,{colSpan:6}))),t.a.createElement(d.a,null,t.a.createElement(b.a,null,t.a.createElement(u.a,{rowsPerPageOptions:[5,10,25,{label:"All",value:-1}],colSpan:3,count:N.length,rowsPerPage:n,page:a,SelectProps:{inputProps:{"aria-label":"rows per page"},native:!0},onChangePage:(e,a)=>{r(a)},onChangeRowsPerPage:e=>{l(parseInt(e.target.value,10)),r(0)},ActionsComponent:S})))))}},2174:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2175:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return f}));var n=r(0),t=r.n(n),l=r(1243),o=r(200),i=r(1347),c=r(1350),s=r(1334),m=r(1547),d=r(1348),u=r(2363),b=r(1349);const p=[{id:"name",label:"Name",minWidth:170},{id:"code",label:"ISO\xa0Code",minWidth:100},{id:"population",label:"Population",minWidth:170,align:"right",format:e=>e.toLocaleString("en-US")},{id:"size",label:"Size\xa0(km\xb2)",minWidth:170,align:"right",format:e=>e.toLocaleString("en-US")},{id:"density",label:"Density",minWidth:170,align:"right",format:e=>e.toFixed(2)}];function g(e,a,r,n){return{name:e,code:a,population:r,size:n,density:r/n}}const h=[g("India","IN",1324171354,3287263),g("China","CN",1403500365,9596961),g("Italy","IT",60483973,301340),g("United States","US",327167434,9833520),g("Canada","CA",37602103,9984670),g("Australia","AU",25475400,7692024),g("Germany","DE",83019200,357578),g("Ireland","IE",4857e3,70273),g("Mexico","MX",126577691,1972550),g("Japan","JP",126317e3,377973),g("France","FR",67022e3,640679),g("United Kingdom","GB",67545757,242495),g("Russia","RU",146793744,17098246),g("Nigeria","NG",200962417,923768),g("Brazil","BR",210147125,8515767)],T=Object(l.a)({root:{width:"100%"},container:{maxHeight:440}});function f(){const e=T(),[a,r]=t.a.useState(0),[n,l]=t.a.useState(10);return t.a.createElement(o.a,{className:e.root},t.a.createElement(m.a,{className:e.container},t.a.createElement(i.a,{stickyHeader:!0,"aria-label":"sticky table"},t.a.createElement(d.a,null,t.a.createElement(b.a,null,p.map(e=>t.a.createElement(s.a,{key:e.id,align:e.align,style:{minWidth:e.minWidth}},e.label)))),t.a.createElement(c.a,null,h.slice(a*n,a*n+n).map(e=>t.a.createElement(b.a,{hover:!0,role:"checkbox",tabIndex:-1,key:e.code},p.map(a=>{const r=e[a.id];return t.a.createElement(s.a,{key:a.id,align:a.align},a.format&&"number"===typeof r?a.format(r):r)})))))),t.a.createElement(u.a,{rowsPerPageOptions:[10,25,100],component:"div",count:h.length,rowsPerPage:n,page:a,onChangePage:(e,a)=>{r(a)},onChangeRowsPerPage:e=>{l(+e.target.value),r(0)}}))}},2176:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"},2177:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return S}));var n=r(0),t=r.n(n),l=r(1243),o=r(1406),i=r(1260),c=r(1191),s=r(1347),m=r(1350),d=r(1334),u=r(1547),b=r(1348),p=r(1349),g=r(201),h=r(200),T=r(2178),f=r.n(T),w=r(1428),C=r.n(w);const y=Object(l.a)({root:{"& > *":{borderBottom:"unset"}}});function E(e,a,r,n,t,l){return{name:e,calories:a,fat:r,carbs:n,protein:t,price:l,history:[{date:"2020-01-05",customerId:"11091700",amount:3},{date:"2020-01-02",customerId:"Anonymous",amount:1}]}}function P(e){const{row:a}=e,[r,n]=t.a.useState(!1),l=y();return t.a.createElement(t.a.Fragment,null,t.a.createElement(p.a,{className:l.root},t.a.createElement(d.a,null,t.a.createElement(c.a,{"aria-label":"expand row",size:"small",onClick:()=>n(!r)},r?t.a.createElement(C.a,null):t.a.createElement(f.a,null))),t.a.createElement(d.a,{component:"th",scope:"row"},a.name),t.a.createElement(d.a,{align:"right"},a.calories),t.a.createElement(d.a,{align:"right"},a.fat),t.a.createElement(d.a,{align:"right"},a.carbs),t.a.createElement(d.a,{align:"right"},a.protein)),t.a.createElement(p.a,null,t.a.createElement(d.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},t.a.createElement(i.a,{in:r,timeout:"auto",unmountOnExit:!0},t.a.createElement(o.a,{margin:1},t.a.createElement(g.a,{variant:"h6",gutterBottom:!0,component:"div"},"History"),t.a.createElement(s.a,{size:"small","aria-label":"purchases"},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(d.a,null,"Date"),t.a.createElement(d.a,null,"Customer"),t.a.createElement(d.a,{align:"right"},"Amount"),t.a.createElement(d.a,{align:"right"},"Total price ($)"))),t.a.createElement(m.a,null,a.history.map(e=>t.a.createElement(p.a,{key:e.date},t.a.createElement(d.a,{component:"th",scope:"row"},e.date),t.a.createElement(d.a,null,e.customerId),t.a.createElement(d.a,{align:"right"},e.amount),t.a.createElement(d.a,{align:"right"},Math.round(e.amount*a.price*100)/100))))))))))}const R=[E("Frozen yoghurt",159,6,24,4,3.99),E("Ice cream sandwich",237,9,37,4.3,4.99),E("Eclair",262,16,24,6,3.79),E("Cupcake",305,3.7,67,4.3,2.5),E("Gingerbread",356,16,49,3.9,1.5)];function S(){return t.a.createElement(u.a,{component:h.a},t.a.createElement(s.a,{"aria-label":"collapsible table"},t.a.createElement(b.a,null,t.a.createElement(p.a,null,t.a.createElement(d.a,null),t.a.createElement(d.a,null,"Dessert (100g serving)"),t.a.createElement(d.a,{align:"right"},"Calories"),t.a.createElement(d.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(d.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(d.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(m.a,null,R.map(e=>t.a.createElement(P,{key:e.name,row:e})))))}},2179:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.calories}</TableCell>\r\n        <TableCell align=\"right\">{row.fat}</TableCell>\r\n        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2180:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return C}));var n=r(0),t=r.n(n),l=r(1243),o=r(1347),i=r(1350),c=r(1334),s=r(1547),m=r(1348),d=r(1349),u=r(200);const b=Object(l.a)({table:{minWidth:700}});function p(e){return"".concat(e.toFixed(2))}function g(e,a,r){return{desc:e,qty:a,unit:r,price:function(e,a){return e*a}(a,r)}}const h=[g("Paperclips (Box)",100,1.15),g("Paper (Case)",10,45.99),g("Waste Basket",2,17.99)],T=h.map(e=>{let{price:a}=e;return a}).reduce((e,a)=>e+a,0);const f=.07*T,w=f+T;function C(){const e=b();return t.a.createElement(s.a,{component:u.a},t.a.createElement(o.a,{className:e.table,"aria-label":"spanning table"},t.a.createElement(m.a,null,t.a.createElement(d.a,null,t.a.createElement(c.a,{align:"center",colSpan:3},"Details"),t.a.createElement(c.a,{align:"right"},"Price")),t.a.createElement(d.a,null,t.a.createElement(c.a,null,"Desc"),t.a.createElement(c.a,{align:"right"},"Qty."),t.a.createElement(c.a,{align:"right"},"Unit"),t.a.createElement(c.a,{align:"right"},"Sum"))),t.a.createElement(i.a,null,h.map(e=>t.a.createElement(d.a,{key:e.desc},t.a.createElement(c.a,null,e.desc),t.a.createElement(c.a,{align:"right"},e.qty),t.a.createElement(c.a,{align:"right"},e.unit),t.a.createElement(c.a,{align:"right"},p(e.price)))),t.a.createElement(d.a,null,t.a.createElement(c.a,{rowSpan:3}),t.a.createElement(c.a,{colSpan:2},"Subtotal"),t.a.createElement(c.a,{align:"right"},p(T))),t.a.createElement(d.a,null,t.a.createElement(c.a,null,"Tax"),t.a.createElement(c.a,{align:"right"},"".concat((.07*100).toFixed(0)," %")),t.a.createElement(c.a,{align:"right"},p(f))),t.a.createElement(d.a,null,t.a.createElement(c.a,{colSpan:2},"Total"),t.a.createElement(c.a,{align:"right"},p(w))))))}},2181:function(e,a,r){"use strict";r.r(a),a.default='import React from \'react\';\r\nimport { makeStyles } from \'@material-ui/core/styles\';\r\nimport Table from \'@material-ui/core/Table\';\r\nimport TableBody from \'@material-ui/core/TableBody\';\r\nimport TableCell from \'@material-ui/core/TableCell\';\r\nimport TableContainer from \'@material-ui/core/TableContainer\';\r\nimport TableHead from \'@material-ui/core/TableHead\';\r\nimport TableRow from \'@material-ui/core/TableRow\';\r\nimport Paper from \'@material-ui/core/Paper\';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\nfunction createRow(desc, qty, unit) {\r\n  const price = priceRow(qty, unit);\r\n  return { desc, qty, unit, price };\r\n}\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\nconst rows = [\r\n  createRow(\'Paperclips (Box)\', 100, 1.15),\r\n  createRow(\'Paper (Case)\', 10, 45.99),\r\n  createRow(\'Waste Basket\', 2, 17.99),\r\n];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label="spanning table">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align="center" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align="right">Price</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align="right">Qty.</TableCell>\r\n            <TableCell align="right">Unit</TableCell>\r\n            <TableCell align="right">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.desc}>\r\n              <TableCell>{row.desc}</TableCell>\r\n              <TableCell align="right">{row.qty}</TableCell>\r\n              <TableCell align="right">{row.unit}</TableCell>\r\n              <TableCell align="right">{ccyFormat(row.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align="right">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align="right">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align="right">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align="right">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n'},2182:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return w}));var n=r(9),t=r(164),l=r(0),o=r.n(l),i=r(2),c=r(8),s=r(1334),m=r(200),d=r(2356);const u=["classes","columns","rowHeight","headerHeight"],b=["dataKey"];class p extends o.a.PureComponent{constructor(){super(...arguments),this.getRowClassName=e=>{let{index:a}=e;const{classes:r,onRowClick:n}=this.props;return Object(i.default)(r.tableRow,r.flexContainer,{[r.tableRowHover]:-1!==a&&null!=n})},this.cellRenderer=e=>{let{cellData:a,columnIndex:r}=e;const{columns:n,classes:t,rowHeight:l,onRowClick:c}=this.props;return o.a.createElement(s.a,{component:"div",className:Object(i.default)(t.tableCell,t.flexContainer,{[t.noClick]:null==c}),variant:"body",style:{height:l},align:null!=r&&n[r].numeric?"right":"left"},a)},this.headerRenderer=e=>{let{label:a,columnIndex:r}=e;const{headerHeight:n,columns:t,classes:l}=this.props;return o.a.createElement(s.a,{component:"div",className:Object(i.default)(l.tableCell,l.flexContainer,l.noClick),variant:"head",style:{height:n},align:t[r].numeric?"right":"left"},o.a.createElement("span",null,a))}}render(){const e=this.props,{classes:a,columns:r,rowHeight:l,headerHeight:i}=e,c=Object(t.a)(e,u);return o.a.createElement(d.a,null,e=>{let{height:s,width:m}=e;return o.a.createElement(d.c,Object.assign({height:s,width:m,rowHeight:l,gridStyle:{direction:"inherit"},headerHeight:i,className:a.table},c,{rowClassName:this.getRowClassName}),r.map((e,r)=>{let{dataKey:l}=e,i=Object(t.a)(e,b);return o.a.createElement(d.b,Object.assign({key:l,headerRenderer:e=>this.headerRenderer(Object(n.a)(Object(n.a)({},e),{},{columnIndex:r})),className:a.flexContainer,cellRenderer:this.cellRenderer,dataKey:l},i))}))})}}p.defaultProps={headerHeight:48,rowHeight:48};const g=Object(c.a)(e=>({flexContainer:{display:"flex",alignItems:"center",boxSizing:"border-box"},table:{"& .ReactVirtualized__Table__headerRow":{flip:!1,paddingRight:"rtl"===e.direction?"0 !important":void 0}},tableRow:{cursor:"pointer"},tableRowHover:{"&:hover":{backgroundColor:e.palette.grey[200]}},tableCell:{flex:1},noClick:{cursor:"initial"}}))(p),h=[["Frozen yoghurt",159,6,24,4],["Ice cream sandwich",237,9,37,4.3],["Eclair",262,16,24,6],["Cupcake",305,3.7,67,4.3],["Gingerbread",356,16,49,3.9]];function T(e,a,r,n,t,l){return{id:e,dessert:a,calories:r,fat:n,carbs:t,protein:l}}const f=[];for(let C=0;C<200;C+=1){const e=h[Math.floor(Math.random()*h.length)];f.push(T(C,...e))}function w(){return o.a.createElement(m.a,{style:{height:400,width:"100%"}},o.a.createElement(g,{rowCount:f.length,rowGetter:e=>{let{index:a}=e;return f[a]},columns:[{width:200,label:"Dessert",dataKey:"dessert"},{width:120,label:"Calories\xa0(g)",dataKey:"calories",numeric:!0},{width:120,label:"Fat\xa0(g)",dataKey:"fat",numeric:!0},{width:120,label:"Carbs\xa0(g)",dataKey:"carbs",numeric:!0},{width:120,label:"Protein\xa0(g)",dataKey:"protein",numeric:!0}]}))}},2183:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\n// ---\r\n\r\nconst sample = [\r\n  ['Frozen yoghurt', 159, 6.0, 24, 4.0],\r\n  ['Ice cream sandwich', 237, 9.0, 37, 4.3],\r\n  ['Eclair', 262, 16.0, 24, 6.0],\r\n  ['Cupcake', 305, 3.7, 67, 4.3],\r\n  ['Gingerbread', 356, 16.0, 49, 3.9],\r\n];\r\n\r\nfunction createData(id, dessert, calories, fat, carbs, protein) {\r\n  return { id, dessert, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n}\r\n\r\nexport default function ReactVirtualizedTable() {\r\n  return (\r\n    <Paper style={{ height: 400, width: '100%' }}>\r\n      <VirtualizedTable\r\n        rowCount={rows.length}\r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 200,\r\n            label: 'Dessert',\r\n            dataKey: 'dessert',\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Calories\\u00A0(g)',\r\n            dataKey: 'calories',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Fat\\u00A0(g)',\r\n            dataKey: 'fat',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Carbs\\u00A0(g)',\r\n            dataKey: 'carbs',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 120,\r\n            label: 'Protein\\u00A0(g)',\r\n            dataKey: 'protein',\r\n            numeric: true,\r\n          },\r\n        ]}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"},2184:function(e,a,r){"use strict";r.r(a),r.d(a,"default",(function(){return h}));var n=r(0),t=r.n(n),l=r(1243),o=r(1347),i=r(1350),c=r(1334),s=r(1547),m=r(1348),d=r(1349),u=r(200);const b=Object(l.a)({table:{minWidth:650}});function p(e,a,r,n,t){return{name:e,calories:a,fat:r,carbs:n,protein:t}}const g=[p("Frozen yoghurt",159,6,24,4),p("Ice cream sandwich",237,9,37,4.3),p("Eclair",262,16,24,6)];function h(){const e=b();return t.a.createElement(s.a,{component:u.a},t.a.createElement(o.a,{className:e.table,"aria-label":"caption table"},t.a.createElement("caption",null,"A basic table example with a caption"),t.a.createElement(m.a,null,t.a.createElement(d.a,null,t.a.createElement(c.a,null,"Dessert (100g serving)"),t.a.createElement(c.a,{align:"right"},"Calories"),t.a.createElement(c.a,{align:"right"},"Fat\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Carbs\xa0(g)"),t.a.createElement(c.a,{align:"right"},"Protein\xa0(g)"))),t.a.createElement(i.a,null,g.map(e=>t.a.createElement(d.a,{key:e.name},t.a.createElement(c.a,{component:"th",scope:"row"},e.name),t.a.createElement(c.a,{align:"right"},e.calories),t.a.createElement(c.a,{align:"right"},e.fat),t.a.createElement(c.a,{align:"right"},e.carbs),t.a.createElement(c.a,{align:"right"},e.protein))))))}},2185:function(e,a,r){"use strict";r.r(a),a.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n];\r\n\r\nexport default function AcccessibleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>A basic table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"},2463:function(e,a,r){"use strict";r.r(a);var n=r(0),t=r.n(n),l=r(1284),o=r(121),i=r(1251),c=r(1245),s=r(201),m=r(1243);const d=Object(m.a)(e=>({layoutRoot:{"& .description":{marginBottom:16}}}));a.default=function(e){return d(),t.a.createElement(t.a.Fragment,null,t.a.createElement("div",{className:"flex flex-1 flex-grow-0 items-center justify-end"},t.a.createElement(i.a,{className:"normal-case",variant:"outlined",component:"a",href:"https://material-ui.com/components/tables",target:"_blank",role:"button"},t.a.createElement(c.a,null,"link"),t.a.createElement("span",{className:"mx-4"},"Reference"))),t.a.createElement(s.a,{className:"text-44 mt-32 mb-8",component:"h1"},"Table"),t.a.createElement(s.a,{className:"description"},"Tables display sets of data. They can be fully customized."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement("a",{href:"https://material.io/design/components/data-tables.html"},"Tables")," display information in a way that\u2019s easy to scan, so that users can look for patterns and insights. They can be embedded in primary content, such as cards."),t.a.createElement(s.a,{className:"mb-16",component:"div"},"Tables can include:"),t.a.createElement("ul",null,t.a.createElement("li",null,"A corresponding visualization"),t.a.createElement("li",null,"Navigation"),t.a.createElement("li",null,"Tools to query and manipulate data")),t.a.createElement(s.a,{className:"mb-16",component:"div"},"When including tools, they should be placed directly above or below the table."),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Basic table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"A simple example with no frills."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2161).default,raw:r(2162)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Data table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"The ",t.a.createElement("code",null,"Table")," component has a close mapping to the native ",t.a.createElement("code",null,"<table>")," elements. This constraint makes building rich data tables challenging."),t.a.createElement(s.a,{className:"mb-16",component:"div"},"The ",t.a.createElement("a",{href:"/components/data-grid/"},t.a.createElement("code",null,"DataGrid")," component")," is designed for use-cases that are focused around handling a large amounts of tabular data. While it comes with a more rigid structure, in exchange, you gain more powerful features."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2163).default,raw:r(2165)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Dense table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"A simple example of a dense table with no frills."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2166).default,raw:r(2167)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Sorting & selecting"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"This example demonstrates the use of ",t.a.createElement("code",null,"Checkbox")," and clickable rows for selection, with a custom ",t.a.createElement("code",null,"Toolbar"),". It uses the ",t.a.createElement("code",null,"TableSortLabel")," component to help style column headings."),t.a.createElement(s.a,{className:"mb-16",component:"div"},"The Table has been given a fixed width to demonstrate horizontal scrolling. In order to prevent the pagination controls from scrolling, the TablePagination component is used outside of the Table. (The ",t.a.createElement("a",{href:"#custom-pagination-actions"},"'Custom Table Pagination Action' example")," below shows the pagination within the TableFooter.)"),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2168).default,raw:r(2170)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Customized tables"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"Here is an example of customizing the component. You can learn more about this in the",t.a.createElement("a",{href:"/customization/components/"},"overrides documentation page"),"."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2171).default,raw:r(2172)})),t.a.createElement(s.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Custom pagination options"),t.a.createElement(s.a,{className:"mb-16",component:"div"},'It\'s possible to customise the options shown in the "Rows per page" select using the ',t.a.createElement("code",null,"rowsPerPageOptions")," prop. You should either provide an array of:"),t.a.createElement("ul",null,t.a.createElement("li",null,t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement("strong",null,"numbers"),", each number will be used for the option's label and value."),t.a.createElement(o.a,{component:"pre",className:"language-jsx"}," \n<TablePagination rowsPerPageOptions={[10, 50]} />\n")),t.a.createElement("li",null,t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement("strong",null,"objects"),", the ",t.a.createElement("code",null,"value")," and ",t.a.createElement("code",null,"label")," keys will be used respectively for the value and label of the option (useful for language strings such as 'All')."),t.a.createElement(o.a,{component:"pre",className:"language-jsx"}," \n<TablePagination rowsPerPageOptions={[10, 50, { value: -1, label: 'All' }]} />\n"))),t.a.createElement(s.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Custom pagination actions"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"The ",t.a.createElement("code",null,"ActionsComponent")," prop of the ",t.a.createElement("code",null,"TablePagination")," component allows the implementation of custom actions."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2173).default,raw:r(2174)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Fixed header"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"An example of a table with scrollable rows and fixed column headers. It leverages the ",t.a.createElement("code",null,"stickyHeader")," prop (\u26a0\ufe0f no IE 11 support)."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2175).default,raw:r(2176)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Collapsible table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"An example of a table with expandable rows, revealing more information. It utilizes the ",t.a.createElement("a",{href:"/api/collapse/"},t.a.createElement("code",null,"Collapse"))," component."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2177).default,raw:r(2179)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Spanning table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"A simple example with spanning rows & columns."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2180).default,raw:r(2181)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Virtualized table"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",t.a.createElement("a",{href:"https://github.com/bvaughn/react-virtualized"},"react-virtualized")," with the ",t.a.createElement("code",null,"Table")," component. It renders 200 rows and can easily handle more. Virtualization helps with performance issues."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2182).default,raw:r(2183)})),t.a.createElement(s.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Accessibility"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"(WAI tutorial: ",t.a.createElement("a",{href:"https://www.w3.org/WAI/tutorials/tables/"},"https://www.w3.org/WAI/tutorials/tables/"),")"),t.a.createElement(s.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Caption"),t.a.createElement(s.a,{className:"mb-16",component:"div"},"A caption functions like a heading for a table. Most screen readers announce the content of captions. Captions help users to find a table and understand what it\u2019s about and decide if they want to read it."),t.a.createElement(s.a,{className:"mb-16",component:"div"},t.a.createElement(l.a,{className:"my-24",iframe:!1,component:r(2184).default,raw:r(2185)})))}}}]);