(this["webpackJsonpfuse-react-app"]=this["webpackJsonpfuse-react-app"]||[]).push([[29],{1284:function(e,r,t){"use strict";t.d(r,"a",(function(){return w}));var n=t(121),a=t(1254),s=t(1263),o=t(1245),c=t(1271),i=t(1272),l=t(2),m=t(0),u=t.n(m),d=t(9),p=t(1187),f=t(638),g=t(1242),h=t(1253),v=t(8),y=t(408),b=t(409),E=t(1285),N=t.n(E);const P=Object(p.a)({productionPrefix:"iframe-"});class x extends u.a.Component{constructor(){super(...arguments),this.state={ready:!1},this.handleRef=e=>{this.contentDocument=e?e.node.contentDocument:null},this.onContentDidMount=()=>{this.setState({ready:!0,jss:Object(y.a)(Object(d.a)(Object(d.a)({},Object(f.a)()),{},{plugins:[...Object(f.a)().plugins,Object(b.a)()],insertionPoint:this.contentDocument.querySelector("#jss-demo-insertion-point")})),sheetsManager:new Map,container:this.contentDocument.body})},this.onContentDidUpdate=()=>{this.contentDocument.body.dir=this.props.theme.direction},this.renderHead=()=>u.a.createElement(u.a.Fragment,null,u.a.createElement("style",{dangerouslySetInnerHTML:{__html:"\n                    html {\n                    font-size: 62.5%;\n                    font-family: Muli, Roboto, Helvetica Neue, Arial, sans-serif;\n                    }\n                "}}),u.a.createElement("noscript",{id:"jss-demo-insertion-point"}))}render(){const{children:e,classes:r,theme:t}=this.props;return u.a.createElement(N.a,{head:this.renderHead(),ref:this.handleRef,className:Object(l.default)(r.root,"shadow"),contentDidMount:this.onContentDidMount,contentDidUpdate:this.onContentDidUpdate},this.state.ready?u.a.createElement(g.b,{jss:this.state.jss,generateClassName:P,sheetsManager:this.state.sheetsManager},u.a.createElement(h.a,{theme:t},u.a.cloneElement(e,{container:this.state.container}))):null)}}var S=Object(v.a)(e=>({root:{backgroundColor:e.palette.background.default,flexGrow:1,height:400,border:"none"}}),{withTheme:!0})(x);function C(e){const[r,t]=Object(m.useState)(e.currentTabIndex),{component:d,raw:p,iframe:f,className:g}=e;return u.a.createElement(s.a,{className:Object(l.default)(g,"shadow")},u.a.createElement(a.a,{position:"static",color:"default",className:"shadow-0"},u.a.createElement(i.a,{classes:{root:"border-b-1",flexContainer:"justify-end"},value:r,onChange:function(e,r){t(r)}},d&&u.a.createElement(c.a,{classes:{root:"min-w-64"},icon:u.a.createElement(o.a,null,"remove_red_eye")}),p&&u.a.createElement(c.a,{classes:{root:"min-w-64"},icon:u.a.createElement(o.a,null,"code")}))),u.a.createElement("div",{className:"flex justify-center max-w-full"},u.a.createElement("div",{className:0===r?"flex flex-1 max-w-full":"hidden"},d&&(f?u.a.createElement(S,null,u.a.createElement(d,null)):u.a.createElement("div",{className:"p-24 flex flex-1 justify-center max-w-full"},u.a.createElement(d,null)))),u.a.createElement("div",{className:1===r?"flex flex-1":"hidden"},p&&u.a.createElement("div",{className:"flex flex-1"},u.a.createElement(n.a,{component:"pre",className:"language-javascript w-full"},p.default)))))}C.defaultProps={currentTabIndex:0};var w=C},2023:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return i}));var n=t(0),a=t.n(n),s=t(1243),o=t(1394);const c=Object(s.a)(e=>({root:{display:"flex","& > * + *":{marginLeft:e.spacing(2)}}}));function i(){const e=c();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,null),a.a.createElement(o.a,{color:"secondary"}))}},2024:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n"},2025:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return i}));var n=t(0),a=t.n(n),s=t(1243),o=t(1394);const c=Object(s.a)(e=>({root:{display:"flex","& > * + *":{marginLeft:e.spacing(2)}}}));function i(){const e=c(),[r,t]=a.a.useState(0);return a.a.useEffect(()=>{const e=setInterval(()=>{t(e=>e>=100?0:e+10)},800);return()=>{clearInterval(e)}},[]),a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{variant:"determinate",value:25}),a.a.createElement(o.a,{variant:"determinate",value:50}),a.a.createElement(o.a,{variant:"determinate",value:75}),a.a.createElement(o.a,{variant:"determinate",value:100}),a.a.createElement(o.a,{variant:"determinate",value:r}))}},2026:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\r\n    }, 800);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress variant=\"determinate\" value={25} />\r\n      <CircularProgress variant=\"determinate\" value={50} />\r\n      <CircularProgress variant=\"determinate\" value={75} />\r\n      <CircularProgress variant=\"determinate\" value={100} />\r\n      <CircularProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n}\r\n"},2027:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return h}));var n=t(0),a=t.n(n),s=t(2),o=t(1243),c=t(1394),i=t(187),l=t(1251),m=t(1256),u=t(1352),d=t.n(u),p=t(1433),f=t.n(p);const g=Object(o.a)(e=>({root:{display:"flex",alignItems:"center"},wrapper:{margin:e.spacing(1),position:"relative"},buttonSuccess:{backgroundColor:i.a[500],"&:hover":{backgroundColor:i.a[700]}},fabProgress:{color:i.a[500],position:"absolute",top:-6,left:-6,zIndex:1},buttonProgress:{color:i.a[500],position:"absolute",top:"50%",left:"50%",marginTop:-12,marginLeft:-12}}));function h(){const e=g(),[r,t]=a.a.useState(!1),[n,o]=a.a.useState(!1),i=a.a.useRef(),u=Object(s.default)({[e.buttonSuccess]:n});a.a.useEffect(()=>()=>{clearTimeout(i.current)},[]);const p=()=>{r||(o(!1),t(!0),i.current=window.setTimeout(()=>{o(!0),t(!1)},2e3))};return a.a.createElement("div",{className:e.root},a.a.createElement("div",{className:e.wrapper},a.a.createElement(m.a,{"aria-label":"save",color:"primary",className:u,onClick:p},n?a.a.createElement(d.a,null):a.a.createElement(f.a,null)),r&&a.a.createElement(c.a,{size:68,className:e.fabProgress})),a.a.createElement("div",{className:e.wrapper},a.a.createElement(l.a,{variant:"contained",color:"primary",className:u,disabled:r,onClick:p},"Accept terms"),r&&a.a.createElement(c.a,{size:24,className:e.buttonProgress})))}},2028:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function CircularIntegration() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const timer = React.useRef();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  const handleButtonClick = () => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = window.setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.wrapper}>\r\n        <Fab\r\n          aria-label=\"save\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          onClick={handleButtonClick}\r\n        >\r\n          {success ? <CheckIcon /> : <SaveIcon />}\r\n        </Fab>\r\n        {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n      </div>\r\n      <div className={classes.wrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={buttonClassname}\r\n          disabled={loading}\r\n          onClick={handleButtonClick}\r\n        >\r\n          Accept terms\r\n        </Button>\r\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"},2029:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return l}));var n=t(0),a=t.n(n),s=t(1394),o=t(201),c=t(1406);function i(e){return a.a.createElement(c.a,{position:"relative",display:"inline-flex"},a.a.createElement(s.a,Object.assign({variant:"determinate"},e)),a.a.createElement(c.a,{top:0,left:0,bottom:0,right:0,position:"absolute",display:"flex",alignItems:"center",justifyContent:"center"},a.a.createElement(o.a,{variant:"caption",component:"div",color:"textSecondary"},"".concat(Math.round(e.value),"%"))))}function l(){const[e,r]=a.a.useState(10);return a.a.useEffect(()=>{const e=setInterval(()=>{r(e=>e>=100?0:e+10)},800);return()=>{clearInterval(e)}},[]),a.a.createElement(i,{value:e})}},2030:function(e,r,t){"use strict";t.r(r),r.default='import React from \'react\';\r\nimport PropTypes from \'prop-types\';\r\nimport CircularProgress from \'@material-ui/core/CircularProgress\';\r\nimport Typography from \'@material-ui/core/Typography\';\r\nimport Box from \'@material-ui/core/Box\';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position="relative" display="inline-flex">\r\n      <CircularProgress variant="determinate" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position="absolute"\r\n        display="flex"\r\n        alignItems="center"\r\n        justifyContent="center"\r\n      >\r\n        <Typography variant="caption" component="div" color="textSecondary">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function CircularStatic() {\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\r\n    }, 800);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return <CircularProgressWithLabel value={progress} />;\r\n}\r\n'},2031:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return i}));var n=t(0),a=t.n(n),s=t(1243),o=t(1246);const c=Object(s.a)(e=>({root:{width:"100%","& > * + *":{marginTop:e.spacing(2)}}}));function i(){const e=c();return a.a.createElement("div",{className:e.root},a.a.createElement(o.a,null),a.a.createElement(o.a,{color:"secondary"}))}},2032:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      <LinearProgress color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n"},2033:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return i}));var n=t(0),a=t.n(n),s=t(1243),o=t(1246);const c=Object(s.a)({root:{width:"100%"}});function i(){const e=c(),[r,t]=a.a.useState(0);return a.a.useEffect(()=>{const e=setInterval(()=>{t(e=>{if(100===e)return 0;const r=10*Math.random();return Math.min(e+r,100)})},500);return()=>{clearInterval(e)}},[]),a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{variant:"determinate",value:r}))}},2034:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress === 100) {\r\n          return 0;\r\n        }\r\n        const diff = Math.random() * 10;\r\n        return Math.min(oldProgress + diff, 100);\r\n      });\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n}\r\n"},2035:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return i}));var n=t(0),a=t.n(n),s=t(1243),o=t(1246);const c=Object(s.a)({root:{width:"100%"}});function i(){const e=c(),[r,t]=a.a.useState(0),[n,s]=a.a.useState(10),i=a.a.useRef(()=>{});return a.a.useEffect(()=>{i.current=()=>{if(r>100)t(0),s(10);else{const e=10*Math.random(),n=10*Math.random();t(r+e),s(r+e+n)}}}),a.a.useEffect(()=>{const e=setInterval(()=>{i.current()},500);return()=>{clearInterval(e)}},[]),a.a.createElement("div",{className:e.root},a.a.createElement(o.a,{variant:"buffer",value:r,valueBuffer:n}))}},2036:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearBuffer() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [buffer, setBuffer] = React.useState(10);\r\n\r\n  const progressRef = React.useRef(() => {});\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n    </div>\r\n  );\r\n}\r\n"},2037:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return u}));var n=t(0),a=t.n(n),s=t(1243),o=t(1246),c=t(201),i=t(1406);function l(e){return a.a.createElement(i.a,{display:"flex",alignItems:"center"},a.a.createElement(i.a,{width:"100%",mr:1},a.a.createElement(o.a,Object.assign({variant:"determinate"},e))),a.a.createElement(i.a,{minWidth:35},a.a.createElement(c.a,{variant:"body2",color:"textSecondary"},"".concat(Math.round(e.value),"%"))))}const m=Object(s.a)({root:{width:"100%"}});function u(){const e=m(),[r,t]=a.a.useState(10);return a.a.useEffect(()=>{const e=setInterval(()=>{t(e=>e>=100?10:e+10)},800);return()=>{clearInterval(e)}},[]),a.a.createElement("div",{className:e.root},a.a.createElement(l,{value:r}))}},2038:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LinearWithValueLabel() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(10);\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    }, 800);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgressWithLabel value={progress} />\r\n    </div>\r\n  );\r\n}\r\n"},2039:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return p}));var n=t(0),a=t.n(n),s=t(8),o=t(1243),c=t(1394),i=t(1246);const l=Object(s.a)(e=>({root:{height:10,borderRadius:5},colorPrimary:{backgroundColor:e.palette.grey["light"===e.palette.type?200:700]},bar:{borderRadius:5,backgroundColor:"#1a90ff"}}))(i.a),m=Object(o.a)(e=>({root:{position:"relative"},bottom:{color:e.palette.grey["light"===e.palette.type?200:700]},top:{color:"#1a90ff",animationDuration:"550ms",position:"absolute",left:0},circle:{strokeLinecap:"round"}}));function u(e){const r=m();return a.a.createElement("div",{className:r.root},a.a.createElement(c.a,Object.assign({variant:"determinate",className:r.bottom,size:40,thickness:4},e,{value:100})),a.a.createElement(c.a,Object.assign({variant:"indeterminate",disableShrink:!0,className:r.top,classes:{circle:r.circle},size:40,thickness:4},e)))}const d=Object(o.a)({root:{flexGrow:1}});function p(){const e=d();return a.a.createElement("div",{className:e.root},a.a.createElement(u,null),a.a.createElement("br",null),a.a.createElement(l,{variant:"determinate",value:50}))}},2040:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#1a90ff',\r\n  },\r\n}))(LinearProgress);\r\n\r\n// Inspired by the former Facebook spinners.\r\nconst useStylesFacebook = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  bottom: {\r\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  top: {\r\n    color: '#1a90ff',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  circle: {\r\n    strokeLinecap: 'round',\r\n  },\r\n}));\r\n\r\nfunction FacebookCircularProgress(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.bottom}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.top}\r\n        classes={{\r\n          circle: classes.circle,\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function CustomizedProgressBars() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FacebookCircularProgress />\r\n      <br />\r\n      <BorderLinearProgress variant=\"determinate\" value={50} />\r\n    </div>\r\n  );\r\n}\r\n"},2041:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return u}));var n=t(0),a=t.n(n),s=t(1243),o=t(633),c=t(1251),i=t(1394),l=t(201);const m=Object(s.a)(e=>({root:{display:"flex",flexDirection:"column",alignItems:"center"},button:{margin:e.spacing(2)},placeholder:{height:40}}));function u(){const e=m(),[r,t]=a.a.useState(!1),[n,s]=a.a.useState("idle"),u=a.a.useRef();a.a.useEffect(()=>()=>{clearTimeout(u.current)},[]);return a.a.createElement("div",{className:e.root},a.a.createElement("div",{className:e.placeholder},a.a.createElement(o.a,{in:r,style:{transitionDelay:r?"800ms":"0ms"},unmountOnExit:!0},a.a.createElement(i.a,null))),a.a.createElement(c.a,{onClick:()=>{t(e=>!e)},className:e.button},r?"Stop loading":"Loading"),a.a.createElement("div",{className:e.placeholder},"success"===n?a.a.createElement(l.a,null,"Success!"):a.a.createElement(o.a,{in:"progress"===n,style:{transitionDelay:"progress"===n?"800ms":"0ms"},unmountOnExit:!0},a.a.createElement(i.a,null))),a.a.createElement(c.a,{onClick:()=>{clearTimeout(u.current),"idle"===n?(s("progress"),u.current=window.setTimeout(()=>{s("success")},2e3)):s("idle")},className:e.button},"idle"!==n?"Reset":"Simulate a load"))}},2042:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  placeholder: {\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nexport default function DelayingAppearance() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [query, setQuery] = React.useState('idle');\r\n  const timerRef = React.useRef();\r\n\r\n  React.useEffect(\r\n    () => () => {\r\n      clearTimeout(timerRef.current);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleClickLoading = () => {\r\n    setLoading((prevLoading) => !prevLoading);\r\n  };\r\n\r\n  const handleClickQuery = () => {\r\n    clearTimeout(timerRef.current);\r\n\r\n    if (query !== 'idle') {\r\n      setQuery('idle');\r\n      return;\r\n    }\r\n\r\n    setQuery('progress');\r\n    timerRef.current = window.setTimeout(() => {\r\n      setQuery('success');\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.placeholder}>\r\n        <Fade\r\n          in={loading}\r\n          style={{\r\n            transitionDelay: loading ? '800ms' : '0ms',\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <CircularProgress />\r\n        </Fade>\r\n      </div>\r\n      <Button onClick={handleClickLoading} className={classes.button}>\r\n        {loading ? 'Stop loading' : 'Loading'}\r\n      </Button>\r\n      <div className={classes.placeholder}>\r\n        {query === 'success' ? (\r\n          <Typography>Success!</Typography>\r\n        ) : (\r\n          <Fade\r\n            in={query === 'progress'}\r\n            style={{\r\n              transitionDelay: query === 'progress' ? '800ms' : '0ms',\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <CircularProgress />\r\n          </Fade>\r\n        )}\r\n      </div>\r\n      <Button onClick={handleClickQuery} className={classes.button}>\r\n        {query !== 'idle' ? 'Reset' : 'Simulate a load'}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"},2043:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return o}));var n=t(0),a=t.n(n),s=t(1394);function o(){return a.a.createElement(s.a,{disableShrink:!0})}},2044:function(e,r,t){"use strict";t.r(r),r.default="import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CircularUnderLoad() {\r\n  return <CircularProgress disableShrink />;\r\n}\r\n"},2453:function(e,r,t){"use strict";t.r(r);var n=t(0),a=t.n(n),s=t(1284),o=t(121),c=t(1251),i=t(1245),l=t(201),m=t(1243);const u=Object(m.a)(e=>({layoutRoot:{"& .description":{marginBottom:16}}}));r.default=function(e){return u(),a.a.createElement(a.a.Fragment,null,a.a.createElement("div",{className:"flex flex-1 flex-grow-0 items-center justify-end"},a.a.createElement(c.a,{className:"normal-case",variant:"outlined",component:"a",href:"https://material-ui.com/components/progress",target:"_blank",role:"button"},a.a.createElement(i.a,null,"link"),a.a.createElement("span",{className:"mx-4"},"Reference"))),a.a.createElement(l.a,{className:"text-44 mt-32 mb-8",component:"h1"},"Progress"),a.a.createElement(l.a,{className:"description"},"Progress indicators commonly known as spinners, express an unspecified wait time or display the length of a process. The animation works with CSS, not JavaScript."),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement("a",{href:"https://material.io/design/components/progress-indicators.html"},"Progress indicators")," inform users about the status of ongoing processes, such as loading an app, submitting a form, or saving updates. They communicate an app\u2019s state and indicate available actions, such as whether users can navigate away from the current screen."),a.a.createElement("ul",null,a.a.createElement("li",null,a.a.createElement("strong",null,"Determinate")," indicators display how long an operation will take."),a.a.createElement("li",null,a.a.createElement("strong",null,"Indeterminate")," indicators visualize an unspecified wait time.")),a.a.createElement(l.a,{className:"mb-16",component:"div"},"When displaying progress for a sequence of processes, indicate overall progress rather than the progress of each activity."),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Circular"),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Circular indeterminate"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2023).default,raw:t(2024)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Circular determinate"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2025).default,raw:t(2026)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Interactive integration"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2027).default,raw:t(2028)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Circular with label"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2029).default,raw:t(2030)})),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Linear"),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Linear indeterminate"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2031).default,raw:t(2032)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Linear determinate"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2033).default,raw:t(2034)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Linear buffer"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2035).default,raw:t(2036)})),a.a.createElement(l.a,{className:"text-24 mt-32 mb-8",component:"h3"},"Linear with label"),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2037).default,raw:t(2038)})),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Non-standard ranges"),a.a.createElement(l.a,{className:"mb-16",component:"div"},"The progress components accept a value in the range 0 - 100. This simplifies things for screen-reader users, where these are the default min / max values. Sometimes, however, you might be working with a data source where the values fall outside this range. Here's how you can easily transform a value in any range to a scale of 0 - 100:"),a.a.createElement(o.a,{component:"pre",className:"language-jsx"},' \n// MIN = Minimum expected value\n// MAX = Maximium expected value\n// Function to normalise the values (MIN / MAX could be integrated)\nconst normalise = value => (value - MIN) * 100 / (MAX - MIN);\n\n// Example component that utilizes the `normalise` function at the point of render.\nfunction Progress(props) {\n  return (\n    <React.Fragment>\n      <CircularProgress variant="determinate" value={normalise(props.value)} />\n      <LinearProgress variant="determinate" value={normalise(props.value)} />\n    </React.Fragment>\n  )\n}\n'),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Customized progress"),a.a.createElement(l.a,{className:"mb-16",component:"div"},"Here are some examples of customizing the component. You can learn more about this in the",a.a.createElement("a",{href:"/customization/components/"},"overrides documentation page"),"."),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2039).default,raw:t(2040)})),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Delaying appearance"),a.a.createElement(l.a,{className:"mb-16",component:"div"},"There are ",a.a.createElement("a",{href:"https://www.nngroup.com/articles/response-times-3-important-limits/"},"3 important limits")," to know around response time. The ripple effect of the ",a.a.createElement("code",null,"ButtonBase")," component ensures that the user feels that the system is reacting instantaneously. Normally, no special feedback is necessary during delays of more than 0.1 but less than 1.0 second. After 1.0 second, you can display a loader to keep user's flow of thought uninterrupted."),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2041).default,raw:t(2042)})),a.a.createElement(l.a,{className:"text-32 mt-32 mb-8",component:"h2"},"Limitations"),a.a.createElement(l.a,{className:"mb-16",component:"div"},"Under heavy load, you might lose the stroke dash animation or see random CircularProgress ring widths. You should run processor intensive operations in a web worker or by batch in order not to block the main rendering thread."),a.a.createElement(l.a,{className:"mb-16",component:"div"},' src="/material-ui-static/images/progress/heavy-load.gif" alt="heavy load/>'),a.a.createElement(l.a,{className:"mb-16",component:"div"},"When it's not possible, you can leverage the ",a.a.createElement("code",null,"disableShrink")," property to mitigate the issue. See ",a.a.createElement("a",{href:"https://github.com/mui-org/material-ui/issues/10327"},"this issue"),"."),a.a.createElement(l.a,{className:"mb-16",component:"div"},a.a.createElement(s.a,{className:"my-24",iframe:!1,component:t(2043).default,raw:t(2044)})))}}}]);